{
	"Parameters": {
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
	"Resources" : {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Subnet" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock" : "10.0.0.0/24",
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "InternetGateway" : {
          "Type" : "AWS::EC2::InternetGateway",
          "Properties" : {
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "AttachGateway" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
             "VpcId" : { "Ref" : "VPC" },
             "InternetGatewayId" : { "Ref" : "InternetGateway" }
           }
        },

        "RouteTable" : {
          "Type" : "AWS::EC2::RouteTable",
          "Properties" : {
            "VpcId" : {"Ref" : "VPC"},
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "Route" : {
          "Type" : "AWS::EC2::Route",
          "DependsOn" : "AttachGateway",
          "Properties" : {
            "RouteTableId" : { "Ref" : "RouteTable" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : { "Ref" : "InternetGateway" }
          }
        },

        "SubnetRouteTableAssociation" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "Properties" : {
            "SubnetId" : { "Ref" : "Subnet" },
            "RouteTableId" : { "Ref" : "RouteTable" }
          }
        },

        "NetworkAcl" : {
          "Type" : "AWS::EC2::NetworkAcl",
          "Properties" : {
            "VpcId" : {"Ref" : "VPC"},
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "InboundHTTPNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "100",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "80", "To" : "80"}
          }
        },

        "InboundSSHNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "101",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "22", "To" : "22"}
          }
        },

        "InboundResponsePortsNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "102",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "1024", "To" : "65535"}
          }
        },

        "OutBoundHTTPNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "100",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "true",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "80", "To" : "80"}
          }
        },

        "OutBoundHTTPSNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "101",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "true",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "443", "To" : "443"}
          }
        },

        "OutBoundResponsePortsNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "NetworkAcl"},
            "RuleNumber" : "102",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "true",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "1024", "To" : "65535"}
          }
        },

        "SubnetNetworkAclAssociation" : {
          "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
          "Properties" : {
            "SubnetId" : { "Ref" : "Subnet" },
            "NetworkAclId" : { "Ref" : "NetworkAcl" }
          }
        },

        "elkIP" : {
          "Type" : "AWS::EC2::EIP",
          "DependsOn" : "AttachGateway",
          "Properties" : {
            "Domain" : "vpc",
            "InstanceId" : { "Ref" : "elkTarget" }
          }
        },

        "jenkinsIP" : {
          "Type" : "AWS::EC2::EIP",
          "DependsOn" : "AttachGateway",
          "Properties" : {
            "Domain" : "vpc",
            "InstanceId" : { "Ref" : "jenkins" }
          }
        },

        "InstanceSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "GroupDescription" : "Enable SSH access via port 22",
            "SecurityGroupIngress" : [
              {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
              { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
              { "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
              { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"}
             ]
          }
        },

		"elkTarget" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"ImageId" : "ami-1853ac65",
                "InstanceType" : "t2.small",
                "SubnetId" : { "Ref" : "Subnet" },
				"SecurityGroupIds" : [{"Ref" : "InstanceSecurityGroup"}],
				"KeyName": { "Ref": "KeyName" },
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		},

        "jenkins" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : "ami-7c75a201",
                "InstanceType" : "t2.micro",
                "SubnetId" : { "Ref" : "Subnet" },
                "SecurityGroupIds" : [{"Ref" : "InstanceSecurityGroup"}],
                "KeyName": { "Ref": "KeyName" },
                "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
            }
        }
	},

    "Outputs" : {
        "JenkinsURL" : {
          "Value" : { "Fn::Join" : [ "", ["http://", { "Fn::GetAtt" : ["jenkins", "PublicIp"] }]]},
          "Description" : "Jenkins URL"
        },
        "ELKURL" : {
          "Value" : { "Fn::Join" : [ "", ["http://", { "Fn::GetAtt" : ["elkTarget", "PublicIp"] }, ":8080"]]},
          "Description" : "ELK Target URL"
        }
    }

}